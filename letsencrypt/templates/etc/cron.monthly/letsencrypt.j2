#!/bin/sh
# Script to update letsencrypt cert every month.

# Check if we have a web server running.
PORT80=$(lsof -ti :80 | wc -l)

# If no web server then start one and open port 80.
if [ $PORT80 = 0 ]; then
  cd {{ acme_challenge_dir }}
  nohup python -m SimpleHTTPServer 80 > /dev/null 2>&1 &
  nft add rule inet firewall incoming tcp dport 80 ct state new accept
fi

# Get a updated certificate.
while true; do
  if sudo -u acme /usr/bin/python /usr/local/bin/acme_tiny.py --disable-check --account-key {{ acme_certs_dir }}/account.key \
       --csr {{ acme_certs_dir }}/{{ acme_domains[0] }}/domain.csr \
       --acme-dir {{ acme_challenge_dir }} \
       > {{ acme_certs_dir }}/{{ acme_domains[0] }}/signed_new.crt \
       2>> /var/log/acme_tiny.log
  then
    wget -O - https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem > {{ acme_certs_dir }}/chain_new.pem
    # Check that the cert is valid.
    if openssl verify -CAfile {{ acme_certs_dir }}/chain_new.pem \
        {{ acme_certs_dir }}/{{ acme_domains[0] }}/signed_new.crt
    then
      mv -f {{ acme_certs_dir }}/chain_new.pem {{ acme_certs_dir }}/chain.pem
      mv -f {{ acme_certs_dir }}/{{ acme_domains[0] }}/signed_new.crt {{ acme_certs_dir }}/{{ acme_domains[0] }}/signed.crt
      echo ""
      echo "[Success] Acme tiny successfully renewed certificate."
      echo ""

{% for acme_service in acme_services %}
      systemctl restart {{ acme_service }}
{% endfor %}

    else
      echo "[Error] Acme tiny have problems."
    fi
    break
  else
    # Sleep for max 9999 seconds, then try again.
    sleep `tr -cd 0-9 < /dev/urandom | head -c 4`
    echo "[Notice] Acme tiny retry triggered."
  fi
done

# Stop temp web server and close port 80 if needed.
if [ $PORT80 = 0 ]; then
  systemctl restart nftables
  pkill -f SimpleHTTPServer
fi
